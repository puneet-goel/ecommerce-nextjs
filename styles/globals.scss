@use "styles/variable";

* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;

  -ms-overflow-style: none;
  scrollbar-width: none;

  ::-webkit-scrollbar {
    display: none;
  }
}

body {
  background-color: variable.$default-background-color;
  font-family: variable.$default-font-family;
}

a {
  text-decoration: none;
}

input[type=radio] {
  width: 15px;
  height: 15px;
  accent-color: variable.$success-color;
}

button {
  font-family: variable.$button-font-family;
}

.button {
  width: 100%;
  background-color: variable.$primary-color;
  color: variable.$floralwhite-color;
  padding: 8px;
  border: none;
  font-size: large;
  border-radius: 20px;
  font-weight: bold;
  cursor: pointer;
  text-transform: capitalize;
}

.button_outlined {
  background-color: variable.$white-color;
  color: variable.$primary-color;
  border: 1px solid variable.$primary-outline-color;
}

.elevation {
  box-shadow: variable.$paper-shadow;
}

.navbar,
.start_of_page {
  height: variable.$navbar-height;
}

.alert_text {
  color: variable.$danger-color !important;
}

.success_text {
  color: variable.$success-color !important;
}

.input {
  width: 100%;
  padding: 12px;
  background-color: variable.$default-background-color;
  border: 1px solid variable.$grey-color;
  border-radius: 4px;

  &:focus {
    outline: none;
    border: 2px solid variable.$primary-color;
  }
}

.input_floating_label {
  margin: 15px 0;
  position: relative;

  label {
    position: absolute;
    top: 0;
    left: 0;
    padding: 12px;
    color: variable.$grey-color;
    transform-origin: 0 0;
    transition: opacity .1s ease-in-out, transform .1s ease-in-out;
  }

  input:focus+label {
    color: variable.$primary-color;
    padding: 0;
    background-color: variable.$default-background-color;
    transform: scale(1) translateY(-0.5rem) translateX(0.5rem);
  }

  input:not([value=""]):not(:focus)+label {
    color: variable.$grey-color;
    padding: 0;
    background-color: variable.$default-background-color;
    transform: scale(1) translateY(-0.5rem) translateX(0.5rem);
  }
}

.bubbles {
  position: absolute;
  width: 100%;
  height: calc(100vh - variable.$navbar-height);
  overflow: hidden;
  z-index: 0;

  &>div {
    position: absolute;
    z-index: -1;
    background-color: variable.$primary-color;
    border-radius: 50%;
  }

  div:nth-child(1) {
    bottom: -175px;
    left: -175px;
    width: 350px;
    height: 350px;
  }

  div:nth-child(2) {
    top: -175px;
    right: -175px;
    width: 350px;
    height: 350px;
  }

  div:nth-child(3) {
    top: 42vh;
    right: 29vw;
    width: 150px;
    height: 150px;
  }

  div:nth-child(4) {
    top: 14vh;
    right: 56vw;
    width: 150px;
    height: 150px;
  }
}

.avatar {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  text-transform: capitalize;
  width: 40px;
  height: 40px;
}

.avatar_text {
  color: variable.$floralwhite-color;
  font-weight: bold;
}

.ck-editor__editable {
  min-height: 250px;
  max-height: 250px;
}

.badge {
  color: variable.$floralwhite-color;
  padding: 4px;
  border-radius: 5px;
  text-align: center;
}

.dropdown {
  position: absolute;
  top: 42px;
  left: 0;
  width: 100%;
  overflow: scroll;
  max-height: 100px;
  padding: 1em;
}

.min_container_height {
  min-height: calc(100vh - 3*variable.$navbar-height);

  .error_align_center {
    text-align: center;
  }
}